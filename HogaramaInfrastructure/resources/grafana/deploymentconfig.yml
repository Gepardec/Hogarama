apiVersion: v1
kind: DeploymentConfig
metadata:
  labels:
    app: grafana
  name: grafana
spec:
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    app: grafana
    deploymentconfig: grafana
  strategy:
    type: Rolling
  template:
    metadata:
      labels:
        app: grafana
        deploymentconfig: grafana
    spec:
      containers:
      - image: grafana/grafana:latest
        imagePullPolicy: Always
        name: grafana
        ports:
        - containerPort: 3000
          protocol: TCP
        resources: {}
        terminationMessagePath: /dev/termination_log
        terminationMessagePolicy: File
        volumeMounts:
        # - mountPath: /var/lib/grafana
        #   name: grafana-data
        - mountPath: /usr/share/grafana/conf/defaults.ini
          name: grafana-config-volume
          subPath: defaults.ini
        - mountPath: /etc/grafana/provisioning/dashboards/dashboard.yaml
          name: grafana-config-volume
          subPath: dashboard.yaml
        - mountPath: /var/lib/grafana/dashboards/hogarama.json
          name: grafana-config-volume
          subPath: hogarama.json
        - mountPath: /etc/grafana/provisioning/datasources/datasource.yaml
          name: grafana-config-volume
          subPath: datasource.yaml
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
      volumes:
      - name: grafana-data
        emptyDir: {}
        # persistentVolumeClaim:
        #   claimName: grafana-data
      - configMap:
          defaultMode: 420
          name: grafana-config
        name: grafana-config-volume
  test: false
  triggers:
  - type: ConfigChange
  - imageChangeParams:
      automatic: true
      containerNames:
      - grafana
      from:
        kind: ImageStreamTag
        name: grafana:latest
    type: ImageChange