metadata:
  name: java-eap-maven-g88n5
projects:
  - name: Hogarama
    source:
      location: 'https://github.com/Gepardec/Hogarama.git'
      type: git
      branch: codereadyws
components:
  - id: redhat/java8/latest
    type: chePlugin
  - id: redhat/dependency-analytics/latest
    type: chePlugin
  - mountSources: true
    endpoints:
      - name: eap
        port: 8080
    memoryLimit: 2048Mi
    type: dockerimage
    volumes:
      - name: m2
        containerPath: /home/jboss/.m2
    image: >-
      registry.redhat.io/jboss-eap-7/eap73-openjdk8-openshift-rhel7@sha256:24dea0cfc154a23c1aeb6b46ade182d0f981362f36b7e6fb9c7d8531ac639fe0
    alias: maven
    env:
      - value: >-
          -Xmx600m -XX:+UseParallelGC -XX:MinHeapFreeRatio=10
          -XX:MaxHeapFreeRatio=20 -XX:GCTimeRatio=4
          -XX:AdaptiveSizePolicyWeight=90 -Dsun.zip.disableMemoryMapping=true
          -Xms20m -Djava.security.egd=file:/dev/./urandom
          -Duser.home=/home/jboss
        name: MAVEN_OPTS
      - value: >-
          -Xrunjdwp:transport=dt_socket,address=8000,server=y,suspend=n
          -Dsun.util.logging.disableCallerCheck=true
        name: JAVA_OPTS_APPEND
  - id: redhat/java11/latest
    type: chePlugin
apiVersion: 1.0.0
commands:
  - name: 1. Build
    actions:
      - workdir: '${CHE_PROJECTS_ROOT}/kitchensink-example'
        type: exec
        command: scl enable rh-maven35 'mvn clean install'
        component: maven
  - name: 2. Configure web server
    actions:
      - workdir: /opt/eap/bin
        type: exec
        command: >-
          ./jboss-cli.sh --connect --command="data-source add --name=ExampleDS
          --jndi-name=java:jboss/datasources/ExampleDS --driver-name=h2
          --connection-url=jdbc:h2:mem:test;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE
          --user-name=sa --password=sa" && echo 'Server was configured'
        component: maven
  - name: 3. Copy war
    actions:
      - workdir: '${CHE_PROJECTS_ROOT}/kitchensink-example'
        type: exec
        command: >-
          cp target/*.war /opt/eap/standalone/deployments/ROOT.war && echo
          'Archive was deployed, click on eap endpoint from Workspace view to
          open the application'
        component: maven
  - name: 4. Hot update
    actions:
      - workdir: '${CHE_PROJECTS_ROOT}/kitchensink-example'
        type: exec
        command: >-
          scl enable rh-maven35 'mvn clean install' && sleep 2 && cp
          target/*.war /opt/eap/standalone/deployments/ROOT.war
        component: maven
  - name: 5. Hogarama Build
    actions:
      - workdir: '${CHE_PROJECTS_ROOT}/Hogarama/Hogajama'
        type: exec
        command: scl enable rh-maven35 'mvn clean install'
        component: maven
  - name: 6. Copy Hogarama wars
    actions:
      - workdir: '${CHE_PROJECTS_ROOT}/Hogarama/Hogajama'
        type: exec
        command: cp target/*.war /opt/eap/standalone/deployments/
        component: maven
  - name: Debug (Attach)
    actions:
      - referenceContent: |
          {
          "version": "0.2.0",
          "configurations": [
          {
              "type": "java",
              "request": "attach",
              "name": "Debug (Attach)",
              "hostName": "localhost",
              "port": 8000
          }
          ]
          }
        type: vscode-launch
