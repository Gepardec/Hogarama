apiVersion: v1
kind: Template
metadata:
  annotations:
    description: Application template for Hogajama using S2I.
    iconClass: icon-jboss
    tags: eap,amq,javaee,java,messaging,jboss,xpaas
    version: 0.0.1
  name: hogarama-s2i
objects:
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      description: The broker's AMQP port.
    labels:
      app: amq62-persistent-ssl
      application: broker
      template: hogarama-template
    name: broker-amq-amqp
  spec:
    ports:
    - port: 5672
      protocol: TCP
      targetPort: 5672
    selector:
      deploymentConfig: broker-amq
    sessionAffinity: None
    type: ClusterIP
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      description: The broker's AMQP SSL port.
    labels:
      app: amq62-persistent-ssl
      application: broker
      template: hogarama-template
    name: broker-amq-amqp-ssl
  spec:
    ports:
    - port: 5671
      protocol: TCP
      targetPort: 5671
    selector:
      deploymentConfig: broker-amq
    sessionAffinity: None
    type: ClusterIP
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      description: The broker's MQTT port.
    labels:
      app: amq62-persistent-ssl
      application: broker
      template: hogarama-template
    name: broker-amq-mqtt
  spec:
    ports:
    - port: 1883
      protocol: TCP
      targetPort: 1883
    selector:
      deploymentConfig: broker-amq
    sessionAffinity: None
    type: ClusterIP
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      description: The broker's MQTT SSL port.
    labels:
      app: amq62-persistent-ssl
      application: broker
      template: hogarama-template
    name: broker-amq-mqtt-ssl
  spec:
    ports:
    - port: 8883
      protocol: TCP
      targetPort: 8883
    selector:
      deploymentConfig: broker-amq
    sessionAffinity: None
    type: ClusterIP
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      description: The broker's STOMP port.
    labels:
      app: amq62-persistent-ssl
      application: broker
      template: hogarama-template
    name: broker-amq-stomp
  spec:
    ports:
    - port: 61613
      protocol: TCP
      targetPort: 61613
    selector:
      deploymentConfig: broker-amq
    sessionAffinity: None
    type: ClusterIP
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      description: The broker's STOMP SSL port.
    labels:
      app: amq62-persistent-ssl
      application: broker
      template: hogarama-template
    name: broker-amq-stomp-ssl
  spec:
    ports:
    - port: 61612
      protocol: TCP
      targetPort: 61612
    selector:
      deploymentConfig: broker-amq
    sessionAffinity: None
    type: ClusterIP
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      description: The broker's OpenWire port.
    labels:
      app: amq62-persistent-ssl
      application: broker
      template: hogarama-template
    name: broker-amq-tcp
  spec:
    ports:
    - port: 61616
      protocol: TCP
      targetPort: 61616
    selector:
      deploymentConfig: broker-amq
    sessionAffinity: None
    type: ClusterIP
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      description: The broker's OpenWire (SSL) port.
    labels:
      app: amq62-persistent-ssl
      application: broker
      template: amq62-persistent-ssl
      xpaas: 1.3.1
    name: broker-amq-tcp-ssl
  spec:
    ports:
    - port: 61617
      protocol: TCP
      targetPort: 61617
    selector:
      deploymentConfig: broker-amq
    sessionAffinity: None
    type: ClusterIP
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      description: The Fluend to handle data flow.
    labels:
      app: fluentd
    name: fluentd
  spec:
    ports:
    - name: 5140-tcp
      port: 5140
      protocol: TCP
      targetPort: 5140
    - name: 24224-tcp
      port: 24224
      protocol: TCP
      targetPort: 24224
    selector:
      app: fluentd
      deploymentconfig: fluentd
    sessionAffinity: None
    type: ClusterIP
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      description: Hogajama application.
    labels:
      app: ${APPLICATION_NAME}
      template: hogarama-template
    name: ${APPLICATION_NAME}
  spec:
    ports:
    - name: 8080-tcp
      port: 8080
      protocol: TCP
      targetPort: 8080
    - name: 8443-tcp
      port: 8443
      protocol: TCP
      targetPort: 8443
    - name: 8778-tcp
      port: 8778
      protocol: TCP
      targetPort: 8778
    selector:
      deploymentconfig: ${APPLICATION_NAME}
    sessionAffinity: None
    type: ClusterIP
- apiVersion: v1
  kind: Service
  metadata:
    labels:
      app: mongodb-persistent
      template: hogarama-template
    name: mongodb
  spec:
    ports:
    - name: mongo
      port: 27017
      protocol: TCP
      targetPort: 27017
    selector:
      name: mongodb
    sessionAffinity: None
    type: ClusterIP
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    labels:
      app: amq62-persistent-ssl
      application: broker
      template: hogarama-template
    name: broker-amq
  spec:
    replicas: 1
    selector:
      deploymentConfig: broker-amq
    strategy:
      activeDeadlineSeconds: 21600
      rollingParams:
        intervalSeconds: 1
        maxSurge: 0
        maxUnavailable: 25%
        timeoutSeconds: 600
        updatePeriodSeconds: 1
      type: Rolling
    template:
      metadata:
        labels:
          application: broker
          deploymentConfig: broker-amq
        name: broker-amq
      spec:
        containers:
        - env:
          - name: AMQ_USER
            value: mq_habarama
          - name: AMQ_PASSWORD
            value: ${MQ_HABARAMA_PASS}
          - name: AMQ_TRANSPORTS
            value: mqtt
          - name: AMQ_QUEUES
          - name: AMQ_TOPICS
            value: habarama
          - name: MQ_SERIALIZABLE_PACKAGES
          - name: AMQ_SPLIT
            value: "false"
          - name: AMQ_MESH_DISCOVERY_TYPE
            value: kube
          - name: AMQ_MESH_SERVICE_NAME
            value: broker-amq-tcp
          - name: AMQ_MESH_SERVICE_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          - name: AMQ_KEYSTORE_TRUSTSTORE_DIR
            value: /etc/amq-secret-volume
          - name: AMQ_TRUSTSTORE
            value: broker.ks
          - name: AMQ_TRUSTSTORE_PASSWORD
            value: L(o?cqGPtJ}7YiHu
          - name: AMQ_KEYSTORE
            value: broker.ks
          - name: AMQ_KEYSTORE_PASSWORD
            value: L(o?cqGPtJ}7YiHu
          - name: AMQ_STORAGE_USAGE_LIMIT
            value: 1 gb
          image: amq62-openshift
          imagePullPolicy: Always
          name: broker-amq
          ports:
          - containerPort: 8778
            name: jolokia
            protocol: TCP
          - containerPort: 5672
            name: amqp
            protocol: TCP
          - containerPort: 5671
            name: amqp-ssl
            protocol: TCP
          - containerPort: 1883
            name: mqtt
            protocol: TCP
          - containerPort: 8883
            name: mqtt-ssl
            protocol: TCP
          - containerPort: 61613
            name: stomp
            protocol: TCP
          - containerPort: 61612
            name: stomp-ssl
            protocol: TCP
          - containerPort: 61616
            name: tcp
            protocol: TCP
          - containerPort: 61617
            name: tcp-ssl
            protocol: TCP
          readinessProbe:
            exec:
              command:
              - /opt/amq/bin/readinessProbe.sh
            failureThreshold: 3
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          terminationMessagePath: /dev/termination-log
          volumeMounts:
          - mountPath: /etc/amq-secret-volume
            name: broker-secret-volume
            readOnly: true
          - mountPath: /opt/amq/data
            name: broker-amq-pvol
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        terminationGracePeriodSeconds: 60
        volumes:
        - name: broker-secret-volume
          secret:
            defaultMode: 420
            secretName: amq-app-secret
        - name: broker-amq-pvol
          persistentVolumeClaim:
            claimName: broker-amq-claim
    test: false
    triggers:
    - imageChangeParams:
        automatic: true
        containerNames:
        - broker-amq
        from:
          kind: ImageStreamTag
          name: amq62-openshift:1.5
          namespace: ${IMAGE_STREAM_NAMESPACE}
      type: ImageChange
    - type: ConfigChange
- apiVersion: v1
  kind: ImageStream
  metadata:
    labels:
      application: fluentd
    name: fluentd
- apiVersion: v1
  kind: BuildConfig
  metadata:
    labels:
      application: fluentd
    name: fluentd
  spec:
    output:
      to:
        kind: ImageStreamTag
        name: fluentd:latest
    source:
      contextDir: Fluentd
      git:
        ref: ${SOURCE_REPOSITORY_REF}
        uri: ${SOURCE_REPOSITORY_URL}
      type: Git
    strategy:
      type: Docker
      dockerStrategy:
        from:
          kind: ImageStreamTag
          name: 'debian:stretch-slim'
          namespace: ${IMAGE_STREAM_NAMESPACE}
        env:
          - name: "APPLICATION_NAME"
            value: ${APPLICATION_NAME}
    triggers:
    - type: GitHub
      github:
        secret: ${GITHUB_WEBHOOK_SECRET}
    - type: Generic
      generic:
        secret: ${GENERIC_WEBHOOK_SECRET}
    - type: ImageChange
    - type: ConfigChange
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    labels:
      app: fluentd
    name: fluentd
  spec:
    replicas: 1
    selector:
      app: fluentd
      deploymentconfig: fluentd
    strategy:
      activeDeadlineSeconds: 21600
      rollingParams:
        intervalSeconds: 1
        maxSurge: 25%
        maxUnavailable: 25%
        timeoutSeconds: 600
        updatePeriodSeconds: 1
      type: Rolling
    template:
      metadata:
        annotations:
          openshift.io/container.fluentd.image.entrypoint: '["/bin/bash"]'
          openshift.io/generated-by: OpenShiftNewApp
        labels:
          app: fluentd
          deploymentconfig: fluentd
      spec:
        containers:
        - image: fluentd
          imagePullPolicy: Always
          name: fluentd
          ports:
          - containerPort: 24224
            protocol: TCP
          - containerPort: 5140
            protocol: TCP
          terminationMessagePath: /dev/termination-log
          volumeMounts:
          - mountPath: /fluentd/log
            name: fluentd-log-volume
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        terminationGracePeriodSeconds: 30
        volumes:
        - name: fluentd-log-volume
          persistentVolumeClaim:
            claimName: fluentd-log-claim
    test: false
    triggers:
    - type: ConfigChange
    - type: ImageChange
      imageChangeParams:
        automatic: true
        containerNames:
        - fluentd
        from:
          kind: ImageStreamTag
          name: fluentd:latest
- apiVersion: v1
  kind: ImageStream
  metadata:
    labels:
      application: ${APPLICATION_NAME}
    name: ${APPLICATION_NAME}
- apiVersion: v1
  kind: BuildConfig
  metadata:
    labels:
      application: ${APPLICATION_NAME}
    name: ${APPLICATION_NAME}
  spec:
    output:
      to:
        kind: ImageStreamTag
        name: ${APPLICATION_NAME}:latest
    source:
      contextDir: ${CONTEXT_DIR}
      git:
        ref: ${SOURCE_REPOSITORY_REF}
        uri: ${SOURCE_REPOSITORY_URL}
      type: Git
    strategy:
      sourceStrategy:
        from:
          kind: ImageStreamTag
          name: jboss-eap70-openshift:1.4
          namespace: ${IMAGE_STREAM_NAMESPACE}
        env:
          - name: MAVEN_MIRROR_URL
            value: ${MAVEN_REPOSITORY}
      type: Source
    triggers:
    - type: GitHub
      github:
        secret: ${GITHUB_WEBHOOK_SECRET}
    - type: Generic
      generic:
        secret: ${GENERIC_WEBHOOK_SECRET}
    - type: ImageChange
    - type: ConfigChange
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    labels:
      app: ${APPLICATION_NAME}
    name: ${APPLICATION_NAME}
  spec:
    replicas: 1
    selector:
      deploymentconfig: ${APPLICATION_NAME}
    strategy:
      activeDeadlineSeconds: 21600
      rollingParams:
        intervalSeconds: 1
        maxSurge: 25%
        maxUnavailable: 25%
        timeoutSeconds: 600
        updatePeriodSeconds: 1
      type: Rolling
    template:
      metadata:
        labels:
          app: ${APPLICATION_NAME}
          deploymentconfig: ${APPLICATION_NAME}
      spec:
        containers:
        - env:
          - name: STAGE
            value: ${STAGE}
          - name: MONGODB_URL
            value: mongodb
          - name: MONGODB_PW
            value: ${MONGODB_PASSWORD}
          - name: OPENSHIFT_AUTH_TOKEN
            value: ${OPENSHIFT_AUTH_TOKEN}
          - name: CURRENT_NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
          image: ${APPLICATION_NAME}
          imagePullPolicy: Always
          name: ${APPLICATION_NAME}
          ports:
          - containerPort: 8080
            protocol: TCP
          - containerPort: 8443
            protocol: TCP
          - containerPort: 8778
            protocol: TCP
          terminationMessagePath: /dev/termination-log
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        terminationGracePeriodSeconds: 30
    test: false
    triggers:
    - type: ImageChange
      imageChangeParams:
        automatic: true
        containerNames:
        - ${APPLICATION_NAME}
        from:
          kind: ImageStreamTag
          name: ${APPLICATION_NAME}:latest
    - type: ConfigChange
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    labels:
      app: mongodb-persistent
      template: mongodb-persistent-template
    name: mongodb
  spec:
    replicas: 1
    selector:
      name: mongodb
    strategy:
      activeDeadlineSeconds: 21600
      recreateParams:
        timeoutSeconds: 600
      type: Recreate
    template:
      metadata:
        labels:
          name: mongodb
      spec:
        containers:
        - env:
          - name: MONGODB_USER
            value: hogajama
          - name: MONGODB_PASSWORD
            value: ${MONGODB_PASSWORD} 
          - name: MONGODB_DATABASE
            value: hogajamadb
          - name: MONGODB_ADMIN_PASSWORD
            value: ${MONGODB_ADMIN_PASSWORD} 
          image: registry.access.redhat.com/rhscl/mongodb-32-rhel7
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            tcpSocket:
              port: 27017
            timeoutSeconds: 1
          name: mongodb
          ports:
          - containerPort: 27017
            protocol: TCP
          readinessProbe:
            exec:
              command:
              - /bin/sh
              - -i
              - -c
              - mongo 127.0.0.1:27017/$MONGODB_DATABASE -u $MONGODB_USER -p $MONGODB_PASSWORD
                --eval="quit()"
            failureThreshold: 3
            initialDelaySeconds: 3
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              memory: 512Mi
          securityContext:
            privileged: false
          terminationMessagePath: /dev/termination-log
          volumeMounts:
          - mountPath: /var/lib/mongodb/data
            name: mongodb-data
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        terminationGracePeriodSeconds: 30
        volumes:
        - name: mongodb-data
          persistentVolumeClaim:
            claimName: mongodb
    test: false
    triggers:
    - type: ImageChange
      imageChangeParams:
        automatic: true
        containerNames:
        - mongodb
        from:
          kind: ImageStreamTag
          name: mongodb:3.2
          namespace: ${IMAGE_STREAM_NAMESPACE}
    - type: ConfigChange
- apiVersion: v1
  kind: PersistentVolumeClaim
  metadata:
    labels:
      app: amq62-persistent-ssl
      application: broker
    name: broker-amq-claim
  spec:
    accessModes:
    - ReadWriteMany
    resources:
      requests:
        storage: 512Mi
- apiVersion: v1
  kind: PersistentVolumeClaim
  metadata:
    name: fluentd-log-claim
  spec:
    accessModes:
    - ReadWriteMany
    resources:
      requests:
        storage: 1Gi
- apiVersion: v1
  kind: PersistentVolumeClaim
  metadata:
    labels:
      app: mongodb-persistent
    name: mongodb
  spec:
    accessModes:
    - ReadWriteOnce
    resources:
      requests:
        storage: 1Gi
- apiVersion: v1
  kind: Route
  metadata:
    labels:
      app: amq62-persistent-ssl
      application: broker
    name: broker-amq-mqtt-ssl
  spec:
    tls:
      termination: passthrough
    to:
      kind: Service
      name: broker-amq-mqtt-ssl
      weight: 100
    wildcardPolicy: None
- apiVersion: v1
  kind: Route
  metadata:
    labels:
      app: ${APPLICATION_NAME}
    name: ${APPLICATION_NAME}
  spec:
    port:
      targetPort: 8080-tcp
    tls:
      termination: edge
    to:
      kind: Service
      name: ${APPLICATION_NAME}
      weight: 100
    wildcardPolicy: None
- apiVersion: v1
  kind: Route
  metadata:
    labels:
      app: ${APPLICATION_NAME}
    name: ${APPLICATION_NAME}-ssl
  spec:
    port:
      targetPort: 8443-tcp
    tls:
      termination: passthrough
    to:
      kind: Service
      name: ${APPLICATION_NAME}
      weight: 100
    wildcardPolicy: None
- apiVersion: v1
  data:
    broker.ks: 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
  kind: Secret
  metadata:
    name: amq-app-secret
  type: Opaque
parameters:
    - description: The name for the application.
      name: APPLICATION_NAME
      required: true
      value: hogajama
    - description: Git source URI for application
      name: SOURCE_REPOSITORY_URL
      required: true
      value: https://github.com/Gepardec/Hogarama.git
    - description: Git branch/tag reference
      name: SOURCE_REPOSITORY_REF
      value: playground
    - description: GitHub trigger secret
      from: '[a-zA-Z0-9]{8}'
      generate: expression
      name: GITHUB_WEBHOOK_SECRET
      required: true
    - description: Generic build trigger secret
      from: '[a-zA-Z0-9]{8}'
      generate: expression
      name: GENERIC_WEBHOOK_SECRET
      required: true
    - description: Stage of this project
      from: '[A-Z0-9]{8}'
      value: test
      name: STAGE
    - description: Maven repository url
      value: https://repo1.maven.org/maven2/
      name: MAVEN_REPOSITORY
    - description: Password used for MQ authentication
      from: '[A-Z0-9]{8}'
      value: mq_habarama_pass
      name: MQ_HABARAMA_PASS
    - description: Password used for MongoDB User authentication
      from: '[A-Z0-9]{8}'
      value: hogajama@mongodb
      name: MONGODB_PASSWORD
    - description: Password used for MongoDB Admin authentication
      from: '[A-Z0-9]{8}'
      generate: expression
      name: MONGODB_ADMIN_PASSWORD
    - description: Session token
      from: '[A-Z0-9]{8}'
      name: OPENSHIFT_AUTH_TOKEN
    - description: Path within Git project to build; empty for root project directory.
      name: CONTEXT_DIR
      value: Hogajama
    - description: Namespace in which the ImageStreams for Red Hat Middleware images are
        installed. These ImageStreams are normally installed in the openshift namespace.
        You should only need to modify this if you've installed the ImageStreams in a
        different namespace/project.
      name: IMAGE_STREAM_NAMESPACE
      required: true
      value: openshift

