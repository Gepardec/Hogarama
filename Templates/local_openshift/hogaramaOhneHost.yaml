apiVersion: v1
kind: Template
metadata:
  creationTimestamp: null
  name: hogarama
objects:
- apiVersion: v1
  kind: BuildConfig
  metadata:
    annotations:
      openshift.io/generated-by: OpenShiftNewApp
    creationTimestamp: null
    labels:
      app: fluentd
    name: fluentd
  spec:
    nodeSelector: null
    output:
      to:
        kind: ImageStreamTag
        name: fluentd:latest
    postCommit: {}
    resources: {}
    runPolicy: Serial
    source:
      contextDir: Fluentd
      git:
        uri: https://github.com/Gepardec/Hogarama/
      type: Git
    strategy:
      type: Docker
      dockerStrategy:
        from:
          kind: ImageStreamTag
          name: 'fluentd-onbuild:v1.1.0-debian-onbuild'
    triggers:
    - github:
        secret: 4m9EY9lErQRrs8LJjudP
      type: GitHub
    - generic:
        secret: A2YAGDWxu2zgCfjIyo25
      type: Generic
    - type: ConfigChange
    - imageChange: {}
      type: ImageChange
  status:
    lastVersion: 0
- apiVersion: v1
  kind: BuildConfig
  metadata:
    annotations:
      openshift.io/generated-by: OpenShiftWebConsole
    creationTimestamp: null
    labels:
      app: hogajama
    name: hogajama
  spec:
    nodeSelector: null
    output:
      to:
        kind: ImageStreamTag
        name: hogajama:tested
    postCommit: {}
    resources: {}
    runPolicy: Serial
    source:
      contextDir: Hogajama
      git:
        ref: master
        uri: https://github.com/Gepardec/Hogarama.git
      type: Git
    strategy:
      sourceStrategy:
        env:
        - name: MAVEN_ARGS
          value: -e -Popenshift -Dcom.redhat.xpaas.repo.redhatga package -Djava.net.preferIPv4Stack=true
        from:
          kind: ImageStreamTag
          name: jboss-eap71-openshift:latest
          namespace: openshift
      type: Source
    triggers:
    - github:
        secret: 6dd31c017aceb946
      type: GitHub
    - generic:
        secret: a1b587899e786b0a
      type: Generic
    - type: ConfigChange
  status:
    lastVersion: 0
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      openshift.io/generated-by: OpenShiftNewApp
    creationTimestamp: null
    labels:
      app: fluentd
    name: fluentd
  spec:
    ports:
    - name: 5140-tcp
      port: 5140
      protocol: TCP
      targetPort: 5140
    - name: 24224-tcp
      port: 24224
      protocol: TCP
      targetPort: 24224
    selector:
      app: fluentd
      deploymentconfig: fluentd
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      openshift.io/generated-by: OpenShiftWebConsole
    creationTimestamp: null
    labels:
      app: hogajama
    name: hogajama
  spec:
    ports:
    - name: 8080-tcp
      port: 8080
      protocol: TCP
      targetPort: 8080
    - name: 8443-tcp
      port: 8443
      protocol: TCP
      targetPort: 8443
    - name: 8778-tcp
      port: 8778
      protocol: TCP
      targetPort: 8778
    selector:
      deploymentconfig: hogajama
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    creationTimestamp: null
    labels:
      app: mongodb-persistent
      template: mongodb-persistent-template
    name: mongodb
  spec:
    ports:
    - name: mongo
      port: 27017
      protocol: TCP
      targetPort: 27017
    selector:
      name: mongodb
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    annotations:
      openshift.io/generated-by: OpenShiftNewApp
    creationTimestamp: null
    generation: 1
    labels:
      app: fluentd
    name: fluentd
  spec:
    replicas: 1
    selector:
      app: fluentd
      deploymentconfig: fluentd
    strategy:
      activeDeadlineSeconds: 21600
      resources: {}
      rollingParams:
        intervalSeconds: 1
        maxSurge: 25%
        maxUnavailable: 25%
        timeoutSeconds: 600
        updatePeriodSeconds: 1
      type: Rolling
    template:
      metadata:
        annotations:
          openshift.io/container.fluentd.image.entrypoint: '["/bin/bash"]'
          openshift.io/generated-by: OpenShiftNewApp
        creationTimestamp: null
        labels:
          app: fluentd
          deploymentconfig: fluentd
      spec:
        containers:
        - image: hogarama/fluentd
          imagePullPolicy: Always
          livenessProbe:
            exec:
              command:
                - /bin/sh
                - '-c'
                - >-
                  tail -1 /fluentd/log/fluent.log | grep -q
                  Mongo::Auth::Unauthorized; test $? != 0
            failureThreshold: 3
            initialDelaySeconds: 60
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          name: fluentd
          ports:
          - containerPort: 24224
            protocol: TCP
          - containerPort: 5140
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          volumeMounts:
          - mountPath: /fluentd/log
            name: fluentd-log-volume
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - name: fluentd-log-volume
          persistentVolumeClaim:
            claimName: fluentd-log-claim
    test: false
    triggers:
    - type: ConfigChange
    - imageChangeParams:
        automatic: true
        containerNames:
        - fluentd
        from:
          kind: ImageStreamTag
          name: fluentd:latest
      type: ImageChange
  status:
    availableReplicas: 0
    latestVersion: 0
    observedGeneration: 0
    replicas: 0
    unavailableReplicas: 0
    updatedReplicas: 0
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    annotations:
      openshift.io/generated-by: OpenShiftWebConsole
    creationTimestamp: null
    generation: 1
    labels:
      app: hogajama
    name: hogajama
  spec:
    replicas: 1
    selector:
      deploymentconfig: hogajama
    strategy:
      activeDeadlineSeconds: 21600
      resources: {}
      rollingParams:
        intervalSeconds: 1
        maxSurge: 25%
        maxUnavailable: 25%
        timeoutSeconds: 600
        updatePeriodSeconds: 1
      type: Rolling
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: hogajama
          deploymentconfig: hogajama
      spec:
        containers:
        - env:
          - name: STAGE
            value: ${STAGE}
          - name: MONGODB_PW
            value: ${MONGODB_PASSWORD}
          - name: OPENSHIFT_AUTH_TOKEN
            value: ${OPENSHIFT_AUTH_TOKEN}
          - name: TINYURL
            value: ${TINYURL}
          - name: KEYCLOAK_AUTH_SERVER_URL
            value: ${KEYCLOAK_AUTH_SERVER_URL}
          - name: CURRENT_NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
          - name: JAVA_OPTS
            value: >-
              -Xms128m -Xmx128m -XX:MaxMetaspaceSize=96m
              -Djava.net.preferIPv4Stack=true
              -Djboss.modules.system.pkgs=org.jboss.logmanager,jdk.nashorn.api,com.sun.crypto.provider
              -Djava.awt.headless=true
          image: hogarama/hogajama
          imagePullPolicy: Always
          name: hogajama
          ports:
          - containerPort: 8080
            protocol: TCP
          - containerPort: 8443
            protocol: TCP
          - containerPort: 8778
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /hogajama-charts.html
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources: {}
          terminationMessagePath: /dev/termination-log
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        securityContext: {}
        terminationGracePeriodSeconds: 30
    test: false
    triggers:
    - imageChangeParams:
        automatic: true
        containerNames:
        - hogajama
        from:
          kind: ImageStreamTag
          name: hogajama:tested
      type: ImageChange
    - type: ConfigChange
  status:
    availableReplicas: 0
    latestVersion: 0
    observedGeneration: 0
    replicas: 0
    unavailableReplicas: 0
    updatedReplicas: 0
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    creationTimestamp: null
    generation: 1
    labels:
      app: mongodb-persistent
      template: mongodb-persistent-template
    name: mongodb
  spec:
    replicas: 1
    selector:
      name: mongodb
    strategy:
      activeDeadlineSeconds: 21600
      recreateParams:
        timeoutSeconds: 600
      resources: {}
      type: Recreate
    template:
      metadata:
        creationTimestamp: null
        labels:
          name: mongodb
      spec:
        containers:
        - env:
          - name: MONGODB_USER
            value: hogajama
          - name: MONGODB_PASSWORD
            value: hogajama@mongodb
          - name: MONGODB_DATABASE
            value: hogajamadb
          - name: MONGODB_ADMIN_PASSWORD
            value: admin@mongodb
          image: registry.access.redhat.com/rhscl/mongodb-32-rhel7@sha256:8106b426b3f6c1beb215b3f4182eb27bc40543e4e0447f59ecd9eed8ae3750b8
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            tcpSocket:
              port: 27017
            timeoutSeconds: 1
          name: mongodb
          ports:
          - containerPort: 27017
            protocol: TCP
          readinessProbe:
            exec:
              command:
              - /bin/sh
              - -i
              - -c
              - mongo 127.0.0.1:27017/$MONGODB_DATABASE -u $MONGODB_USER -p $MONGODB_PASSWORD
                --eval="quit()"
            failureThreshold: 3
            initialDelaySeconds: 3
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              memory: 512Mi
          securityContext:
            capabilities: {}
            privileged: false
          terminationMessagePath: /dev/termination-log
          volumeMounts:
          - mountPath: /var/lib/mongodb/data
            name: mongodb-data
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - name: mongodb-data
          persistentVolumeClaim:
            claimName: mongodb
    test: false
    triggers:
    - imageChangeParams:
        automatic: true
        containerNames:
        - mongodb
        from:
          kind: ImageStreamTag
          name: mongodb:3.2
          namespace: openshift
      type: ImageChange
    - type: ConfigChange
  status:
    availableReplicas: 0
    latestVersion: 0
    observedGeneration: 0
    replicas: 0
    unavailableReplicas: 0
    updatedReplicas: 0
- apiVersion: v1
  kind: PersistentVolumeClaim
  metadata:
    creationTimestamp: null
    name: fluentd-log-claim
  spec:
    accessModes:
    - ReadWriteMany
    resources:
      requests:
        storage: 1Gi
  status: {}
- apiVersion: v1
  kind: PersistentVolumeClaim
  metadata:
    creationTimestamp: null
    labels:
      app: mongodb-persistent
      template: mongodb-persistent-template
    name: mongodb
  spec:
    accessModes:
    - ReadWriteOnce
    resources:
      requests:
        storage: 1Gi
  status: {}
- apiVersion: v1
  kind: Route
  metadata:
    annotations:
      openshift.io/generated-by: OpenShiftWebConsole
      openshift.io/host.generated: "true"
    creationTimestamp: null
    labels:
      app: hogajama
    name: hogajama
  spec:
    port:
      targetPort: 8080-tcp
    tls:
      termination: edge
    to:
      kind: Service
      name: hogajama
      weight: 100
    wildcardPolicy: None
  status:
    ingress:
    - conditions:
      - lastTransitionTime: 2017-02-10T11:40:23Z
        status: "True"
        type: Admitted
      host: hogajama-57-hogarama.cloud.itandtel.at
      routerName: prod-router
      wildcardPolicy: None
    - conditions:
      - lastTransitionTime: 2017-04-20T16:55:51Z
        status: "True"
        type: Admitted
      host: hogajama-57-hogarama.cloud.itandtel.at
      routerName: markusrouter
      wildcardPolicy: None
    - conditions:
      - lastTransitionTime: 2017-04-21T12:02:36Z
        status: "True"
        type: Admitted
      host: hogajama-57-hogarama.cloud.itandtel.at
      routerName: markusrouterpoi
      wildcardPolicy: None
    - conditions:
      - lastTransitionTime: 2017-04-24T08:11:30Z
        status: "True"
        type: Admitted
      host: hogajama-57-hogarama.cloud.itandtel.at
      routerName: router
      wildcardPolicy: None
    - conditions:
      - lastTransitionTime: 2017-04-24T08:19:06Z
        status: "True"
        type: Admitted
      host: hogajama-57-hogarama.cloud.itandtel.at
      routerName: router-poi
      wildcardPolicy: None
    - conditions:
      - lastTransitionTime: 2017-04-25T09:55:12Z
        status: "True"
        type: Admitted
      host: hogajama-57-hogarama.cloud.itandtel.at
      routerName: ha-router-poi
      wildcardPolicy: None
    - conditions:
      - lastTransitionTime: 2017-04-25T10:21:09Z
        status: "True"
        type: Admitted
      host: hogajama-57-hogarama.cloud.itandtel.at
      routerName: ha-router-poi1
      wildcardPolicy: None
    - conditions:
      - lastTransitionTime: 2017-05-02T14:32:04Z
        status: "True"
        type: Admitted
      host: hogajama-57-hogarama.cloud.itandtel.at
      routerName: router-poi-4
      wildcardPolicy: None
- apiVersion: v1
  kind: Route
  metadata:
    annotations:
      openshift.io/host.generated: "true"
    creationTimestamp: null
    labels:
      app: hogajama
    name: hogajama-ssl
  spec:
    port:
      targetPort: 8443-tcp
    tls:
      termination: passthrough
    to:
      kind: Service
      name: hogajama
      weight: 100
    wildcardPolicy: None
  status:
    ingress:
    - conditions:
      - lastTransitionTime: 2017-02-14T09:21:06Z
        status: "True"
        type: Admitted
      host: hogajama-ssl-57-hogarama.cloud.itandtel.at
      routerName: prod-router
      wildcardPolicy: None
    - conditions:
      - lastTransitionTime: 2017-04-20T16:55:51Z
        status: "True"
        type: Admitted
      host: hogajama-ssl-57-hogarama.cloud.itandtel.at
      routerName: markusrouter
      wildcardPolicy: None
    - conditions:
      - lastTransitionTime: 2017-04-21T12:02:36Z
        status: "True"
        type: Admitted
      host: hogajama-ssl-57-hogarama.cloud.itandtel.at
      routerName: markusrouterpoi
      wildcardPolicy: None
    - conditions:
      - lastTransitionTime: 2017-04-24T08:11:32Z
        status: "True"
        type: Admitted
      host: hogajama-ssl-57-hogarama.cloud.itandtel.at
      routerName: router
      wildcardPolicy: None
    - conditions:
      - lastTransitionTime: 2017-04-24T08:19:07Z
        status: "True"
        type: Admitted
      host: hogajama-ssl-57-hogarama.cloud.itandtel.at
      routerName: router-poi
      wildcardPolicy: None
    - conditions:
      - lastTransitionTime: 2017-04-25T09:55:13Z
        status: "True"
        type: Admitted
      host: hogajama-ssl-57-hogarama.cloud.itandtel.at
      routerName: ha-router-poi
      wildcardPolicy: None
    - conditions:
      - lastTransitionTime: 2017-04-25T10:21:10Z
        status: "True"
        type: Admitted
      host: hogajama-ssl-57-hogarama.cloud.itandtel.at
      routerName: ha-router-poi1
      wildcardPolicy: None
    - conditions:
      - lastTransitionTime: 2017-05-02T14:32:05Z
        status: "True"
        type: Admitted
      host: hogajama-ssl-57-hogarama.cloud.itandtel.at
      routerName: router-poi-4
      wildcardPolicy: None
      apiVersion: v1
- apiVersion: v1
  kind: ImageStream
  metadata:
    annotations:
      openshift.io/image.dockerRepositoryCheck: 2018-02-03T11:11:05Z
    creationTimestamp: null
    generation: 2
    labels:
      app: fluentd-onbuild
    name: fluentd-onbuild
  spec:
    lookupPolicy:
      local: false
    tags:
    - annotations:
        openshift.io/generated-by: OpenShiftWebConsole
        openshift.io/imported-from: fluent/fluentd:v1.1.0-debian-onbuild
      from:
        kind: DockerImage
        name: fluent/fluentd:v1.1.0-debian-onbuild
      generation: 2
      importPolicy: {}
      name: v1.1.0-debian-onbuild
      referencePolicy:
        type: Source
  status:
    dockerImageRepository: ""
- apiVersion: v1
  kind: BuildConfig
  metadata:
    annotations:
      openshift.io/generated-by: OpenShiftWebConsole
    creationTimestamp: null
    labels:
      app: mock-gui
    name: mock-gui
  spec:
    nodeSelector: null
    output:
      to:
        kind: ImageStreamTag
        name: mock-gui:latest
    postCommit: {}
    resources: {}
    runPolicy: Serial
    source:
      contextDir: Hogajama
      git:
        ref: master
        uri: https://github.com/Gepardec/Hogarama.git
      type: Git
    strategy:
      sourceStrategy:
        from:
          kind: ImageStreamTag
          name: redhat-openjdk18-openshift:latest
          namespace: openshift
      type: Source
    triggers:
    - generic:
        secret: 839d5fe938836ff1
      type: Generic
    - github:
        secret: 35fcf10dc7b7c67a
      type: GitHub
    - imageChange: {}
      type: ImageChange
    - type: ConfigChange
  status:
    lastVersion: 0
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    annotations:
      openshift.io/generated-by: OpenShiftWebConsole
    creationTimestamp: null
    generation: 1
    labels:
      app: mock-gui
    name: mock-gui
  spec:
    replicas: 1
    selector:
      deploymentconfig: mock-gui
    strategy:
      activeDeadlineSeconds: 21600
      resources: {}
      rollingParams:
        intervalSeconds: 1
        maxSurge: 25%
        maxUnavailable: 25%
        timeoutSeconds: 600
        updatePeriodSeconds: 1
      type: Rolling
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: mock-gui
          deploymentconfig: mock-gui
      spec:
        containers:
        - env:
          - name: AMQ_HOST
            value: https://broker-amq-mqtt-ssl:8883
          - name: KEYCLOAK_AUTH_SERVER_URL
            value: ${KEYCLOAK_AUTH_SERVER_URL}
          - name: JAVA_OPTIONS
            value: -Djava.net.preferIPv4Stack=true
          image: hogarama/mock-gui
          imagePullPolicy: Always
          name: mock-gui
          ports:
          - containerPort: 8080
            protocol: TCP
          - containerPort: 8443
            protocol: TCP
          - containerPort: 8778
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
    test: false
    triggers:
    - imageChangeParams:
        automatic: true
        containerNames:
        - mock-gui
        from:
          kind: ImageStreamTag
          name: mock-gui:latest
      type: ImageChange
    - type: ConfigChange
  status:
    availableReplicas: 0
    latestVersion: 0
    observedGeneration: 0
    replicas: 0
    unavailableReplicas: 0
    updatedReplicas: 0
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      openshift.io/generated-by: OpenShiftWebConsole
    creationTimestamp: null
    labels:
      app: mock-gui
    name: mock-gui
  spec:
    ports:
    - name: 8080-tcp
      port: 8080
      protocol: TCP
      targetPort: 8080
    - name: 8443-tcp
      port: 8443
      protocol: TCP
      targetPort: 8443
    - name: 8778-tcp
      port: 8778
      protocol: TCP
      targetPort: 8778
    selector:
      deploymentconfig: mock-gui
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Route
  metadata:
    annotations:
      openshift.io/generated-by: OpenShiftWebConsole
      openshift.io/host.generated: "true"
    creationTimestamp: null
    labels:
      app: mock-gui
    name: mock-gui
  spec:
    port:
      targetPort: 8080-tcp
    to:
      kind: Service
      name: mock-gui
      weight: 100
    wildcardPolicy: None
  status:
    ingress:
    - conditions:
      - lastTransitionTime: 2018-05-04T10:43:19Z
        status: "True"
        type: Admitted
      host: mock-gui-57-hogarama.cloud.itandtel.at
      routerName: prod-router
      wildcardPolicy: None
- apiVersion: v1
  kind: ImageStream
  metadata:
    annotations:
      openshift.io/generated-by: OpenShiftWebConsole
    creationTimestamp: null
    generation: 1
    labels:
      app: mock-gui
    name: mock-gui
  spec:
    lookupPolicy:
      local: false
    tags:
    - annotations: null
      from:
        kind: DockerImage
        name: mock-gui:latest
      generation: null
      importPolicy: {}
      name: latest
      referencePolicy:
        type: ""
  status:
    dockerImageRepository: ""
parameters:
    - description: Stage of this project
      from: '[A-Z0-9]{8}'
      value: test
      name: STAGE
    - description: Password used for MQ authentication
      from: '[A-Z0-9]{8}'
      value: mq_habarama_pass
      name: MQ_HABARAMA_PASS
    - description: Password used for MongoDB User authentication
      from: '[A-Z0-9]{8}'
      value: hogajama@mongodb
      name: MONGODB_PASSWORD
    - description: Password used for MongoDB Admin authentication
      from: '[A-Z0-9]{8}'
      generate: expression
      name: MONGODB_ADMIN_PASSWORD
    - description: Session token
      from: '[A-Z0-9]{8}'
      name: OPENSHIFT_AUTH_TOKEN
    - description: Tiny URL
      from: '[A-Z0-9]{8}'
      name: TINYURL
    - description: Url of SSO authentication server
      value: https://secure-sso-57-hogarama.cloud.itandtel.at/auth/
      name: KEYCLOAK_AUTH_SERVER_URL
