apiVersion: v1
kind: List
metadata: {}
items:
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      image.openshift.io/triggers: '[{"from":{"kind":"ImageStreamTag","name":"hogajama-run:latest"},"fieldPath":"spec.template.spec.containers[?(@.name==\"hogajama-run\")].image"}]'
    creationTimestamp: null
    labels:
      app: hogajama
      app.kubernetes.io/component: hogajama
      app.kubernetes.io/instance: hogajama
    name: hogajama
  spec:
    replicas: 1
    selector:
      matchLabels:
        deployment: hogajama
    strategy: {}
    template:
      metadata:
        labels:
          deployment: hogajama
      spec:
        initContainers:
        - name: upd-kafka-jks
          imagePullPolicy: IfNotPresent
          image: 'openjdk:11.0.16'
          command:
            - keytool
          args:
            - '-import'
            - '-trustcacerts'
            - '-alias'
            - root
            - '-file'
            - /certs/ca.crt
            - '-keystore'
            - /kafka/kafka-truststore.jks
            - '-noprompt'
            - '-storepass'
            - password
          volumeMounts:
            - name: kafka-certs
              mountPath: /certs
            - name: certificates
              mountPath: /kafka
        containers:
        - image: ' '
          name: hogajama-run
          ports:
          - containerPort: 8080
            protocol: TCP
          - containerPort: 9990
            protocol: TCP
          livenessProbe:
            httpGet:
              path: /health
              port: 9990
            initialDelaySeconds: 100
            periodSeconds: 10
          readinessProbe:
            httpGet:
              path: /health
              port: 9990
            initialDelaySeconds: 100
            periodSeconds: 10
          volumeMounts:
            - name: certificates
              mountPath: /opt/jboss/wildfly/standalone/configuration/certs
          env:
          - name: POSTGRESQL_PASSWORD
            valueFrom:
              secretKeyRef:
                key: password
                name: helm-hogajama-postgresql
          - name: AMQ_USER
            valueFrom:
              secretKeyRef:
                key: AMQ_USER
                name: amq-credentials
          - name: AMQ_PASSWORD
            valueFrom:
              secretKeyRef:
                key: AMQ_PASSWORD
                name: amq-credentials
          - name: KEYCLOAK_CLIENT_ID
            valueFrom:
              secretKeyRef:
                name: keycloak-client-secret-hogarama-client
                key: CLIENT_ID
          - name: KEYCLOAK_CREDENTIALS_SECRET
            valueFrom:
              secretKeyRef:
                name: keycloak-client-secret-hogarama-client
                key: CLIENT_SECRET
          envFrom:
            - configMapRef:
                name: hogajama-config
            - secretRef:
                name: mongodb-credentials
          resources:
            requests:
              memory: 0.5Gi
              cpu: "200m"
            limits:
              memory: 1Gi
              cpu: "1"
        volumes:
        - name: certificates
          emptyDir: { }
        - name: kafka-certs
          secret:
            secretName: gepardec-kafka-cluster-cluster-ca-cert
            defaultMode: 420
