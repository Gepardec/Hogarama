kind: ConfigMap
apiVersion: v1
metadata:
  name: keycloak-config
data:
  01_2_gepardec.yaml: |-
    id: hogarama
    realm: hogarama
    displayName: hogarama
    notBefore: 0
    defaultSignatureAlgorithm: RS256
    revokeRefreshToken: false
    refreshTokenMaxReuse: 0
    accessTokenLifespan: 300
    accessTokenLifespanForImplicitFlow: 900
    ssoSessionIdleTimeout: 1800
    ssoSessionMaxLifespan: 36000
    ssoSessionIdleTimeoutRememberMe: 0
    ssoSessionMaxLifespanRememberMe: 0
    offlineSessionIdleTimeout: 2592000
    offlineSessionMaxLifespanEnabled: false
    offlineSessionMaxLifespan: 5184000
    clientSessionIdleTimeout: 0
    clientSessionMaxLifespan: 0
    clientOfflineSessionIdleTimeout: 0
    clientOfflineSessionMaxLifespan: 0
    accessCodeLifespan: 60
    accessCodeLifespanUserAction: 300
    accessCodeLifespanLogin: 1800
    actionTokenGeneratedByAdminLifespan: 43200
    actionTokenGeneratedByUserLifespan: 300
    oauth2DeviceCodeLifespan: 600
    oauth2DevicePollingInterval: 5
    enabled: true
    sslRequired: external
    registrationAllowed: false
    registrationEmailAsUsername: false
    rememberMe: false
    verifyEmail: false
    loginWithEmailAllowed: true
    duplicateEmailsAllowed: false
    resetPasswordAllowed: false
    editUsernameAllowed: false
    bruteForceProtected: false
    permanentLockout: false
    maxFailureWaitSeconds: 900
    minimumQuickLoginWaitSeconds: 60
    waitIncrementSeconds: 60
    quickLoginCheckMilliSeconds: 1000
    maxDeltaTimeSeconds: 43200
    failureFactor: 30
    roles:
      realm:
        - id: 516850fb-b6f9-4605-9661-5fbc4119ac74
          name: admins
          description: Hogarama Admin Role
          composite: false
          clientRole: false
          containerId: hogarama
          attributes: {}
    defaultRole:
      id: f295554b-56e9-4b3d-a63e-ead340b65728
      name: default-roles-hogarama
      description: ${role_default-roles}
      composite: true
      clientRole: false
      containerId: hogarama
    requiredCredentials:
      - password
    otpPolicyType: totp
    otpPolicyAlgorithm: HmacSHA1
    otpPolicyInitialCounter: 0
    otpPolicyDigits: 6
    otpPolicyLookAheadWindow: 1
    otpPolicyPeriod: 30
    otpSupportedApplications:
      - FreeOTP
      - Google Authenticator
    webAuthnPolicyRpEntityName: keycloak
    webAuthnPolicySignatureAlgorithms:
      - ES256
    webAuthnPolicyRpId: ''
    webAuthnPolicyAttestationConveyancePreference: not specified
    webAuthnPolicyAuthenticatorAttachment: not specified
    webAuthnPolicyRequireResidentKey: not specified
    webAuthnPolicyUserVerificationRequirement: not specified
    webAuthnPolicyCreateTimeout: 0
    webAuthnPolicyAvoidSameAuthenticatorRegister: false
    webAuthnPolicyAcceptableAaguids: []
    webAuthnPolicyPasswordlessRpEntityName: keycloak
    webAuthnPolicyPasswordlessSignatureAlgorithms:
      - ES256
    webAuthnPolicyPasswordlessRpId: ''
    webAuthnPolicyPasswordlessAttestationConveyancePreference: not specified
    webAuthnPolicyPasswordlessAuthenticatorAttachment: not specified
    webAuthnPolicyPasswordlessRequireResidentKey: not specified
    webAuthnPolicyPasswordlessUserVerificationRequirement: not specified
    webAuthnPolicyPasswordlessCreateTimeout: 0
    webAuthnPolicyPasswordlessAvoidSameAuthenticatorRegister: false
    webAuthnPolicyPasswordlessAcceptableAaguids: []
    scopeMappings:
      - clientScope: offline_access
        roles:
          - offline_access
    clientScopeMappings:
      account:
        - client: account-console
          roles:
            - manage-account
    clients:
      - id: hogarama
        clientId: hogarama
        name: ''
        description: ''
        rootUrl: https://app-hogarama.apps.c-gepa-play.gepa.vshnmanaged.net/
        adminUrl: ''
        baseUrl: https://app-hogarama.apps.c-gepa-play.gepa.vshnmanaged.net/
        surrogateAuthRequired: false
        enabled: true
        alwaysDisplayInConsole: false
        clientAuthenticatorType: client-secret
        secret: 12360720-0484-40da-9459-34ce53121677
        redirectUris:
        - http://app-hogarama.apps.c-gepa-play.gepa.vshnmanaged.net/*
        - https://app-hogarama.apps.c-gepa-play.gepa.vshnmanaged.net/*
        webOrigins:
        - "*"
        notBefore: 0
        bearerOnly: false
        consentRequired: false
        standardFlowEnabled: true
        implicitFlowEnabled: false
        directAccessGrantsEnabled: true
        serviceAccountsEnabled: false
        publicClient: false
        frontchannelLogout: false
        protocol: openid-connect
        attributes:
          oidc.ciba.grant.enabled: 'false'
          backchannel.logout.session.required: 'true'
          post.logout.redirect.uris: https://app-hogarama.apps.c-gepa-play.gepa.vshnmanaged.net/*
          display.on.consent.screen: 'false'
          oauth2.device.authorization.grant.enabled: 'false'
          backchannel.logout.revoke.offline.tokens: 'false'
        authenticationFlowBindingOverrides: {}
        fullScopeAllowed: true
        nodeReRegistrationTimeout: -1
        defaultClientScopes:
        - roles
        - microprofile-jwt
        optionalClientScopes: []
        access:
          view: true
          configure: true
          manage: true
      - id: hogarama-frontend
        clientId: hogarama-frontend
        name: hogarama-frontend
        description: ''
        rootUrl: https://app-hogarama.apps.c-gepa-play.gepa.vshnmanaged.net/
        adminUrl: ''
        baseUrl: ''
        surrogateAuthRequired: false
        enabled: true
        alwaysDisplayInConsole: false
        clientAuthenticatorType: public
        redirectUris:
        - https://app-hogarama.apps.c-gepa-play.gepa.vshnmanaged.net/*
        webOrigins:
        - "*"
        notBefore: 0
        bearerOnly: false
        consentRequired: false
        standardFlowEnabled: true
        implicitFlowEnabled: false
        directAccessGrantsEnabled: true
        serviceAccountsEnabled: false
        publicClient: true
        frontchannelLogout: false
        protocol: openid-connect
        attributes:
          oidc.ciba.grant.enabled: 'false'
          backchannel.logout.session.required: 'true'
          post.logout.redirect.uris: "+"
          display.on.consent.screen: 'false'
          oauth2.device.authorization.grant.enabled: 'false'
          backchannel.logout.revoke.offline.tokens: 'false'
        authenticationFlowBindingOverrides: {}
        fullScopeAllowed: true
        nodeReRegistrationTimeout: -1
        protocolMappers:
        - name: name
          protocol: openid-connect
          protocolMapper: oidc-full-name-mapper
          consentRequired: false
          config:
            id.token.claim: 'true'
            access.token.claim: 'true'
            userinfo.token.claim: 'true'
        - name: given name
          protocol: openid-connect
          protocolMapper: oidc-usermodel-property-mapper
          consentRequired: false
          config:
            userinfo.token.claim: 'true'
            user.attribute: firstName
            id.token.claim: 'true'
            access.token.claim: 'true'
            claim.name: given_name
            jsonType.label: String
        - name: email
          protocol: openid-connect
          protocolMapper: oidc-usermodel-property-mapper
          consentRequired: false
          config:
            userinfo.token.claim: 'true'
            user.attribute: email
            id.token.claim: 'true'
            access.token.claim: 'true'
            claim.name: email
            jsonType.label: String
        - name: family name
          protocol: openid-connect
          protocolMapper: oidc-usermodel-property-mapper
          consentRequired: false
          config:
            userinfo.token.claim: 'true'
            user.attribute: lastName
            id.token.claim: 'true'
            access.token.claim: 'true'
            claim.name: family_name
            jsonType.label: String
        defaultClientScopes:
        - roles
        - microprofile-jwt
        optionalClientScopes: []
        access:
          view: true
          configure: true
          manage: true
    identityProviders:
      - alias: google
        displayName: Google
        internalId: e72bcb42-3681-4db9-922d-a2ae7ab3af9d
        providerId: google
        enabled: true
        updateProfileFirstLoginMode: 'on'
        trustEmail: false
        storeToken: false
        addReadTokenRoleOnCreate: false
        authenticateByDefault: false
        linkOnly: false
        firstBrokerLoginFlowAlias: first broker login
        config:
          alias: google
          clientSecret: '**********'
          clientId: 441948363499-83ukue98nntbv2hjdfo2ai3eo9nbq455.apps.googleusercontent.com
    resetCredentialsFlow: reset credentials
    clientAuthenticationFlow: clients
    dockerAuthenticationFlow: docker auth
    keycloakVersion: 18.0.6.redhat-00001
  02_master.yaml: |-
    realm: master
    loginTheme: gepardec
    roles:
      realm:
        - name: admin-role-hogarama-realm
          description: 'Administrator role for managing the realm gepardec'
          composite: true
          composites:
            client:
              hogarama-realm:
                - manage-authorization
                - view-events
                - view-clients
                - query-realms
                - view-authorization
                - query-users
                - view-users
                - manage-identity-providers
                - view-realm
                - manage-events
                - view-identity-providers
                - create-client
                - query-groups
                - manage-clients
                - manage-users
                - impersonation
                - manage-realm
                - query-clients
          clientRole: false
        - name: client-admin-hogarama-realm
          description: 'Administrator role for managing clients in the realm gepardec'
          composite: true
          composites:
            client:
              hogarama-realm:
                - create-client
                - manage-clients
                - view-clients
          clientRole: false

    users:
      - username: client-admin-gepardec
        enabled: true
        realmRoles:
          - "client-admin-hogarama-realm"
      - username: admin-gepardec
        enabled: true
        realmRoles:
          - "admin-role-hogarama-realm"
