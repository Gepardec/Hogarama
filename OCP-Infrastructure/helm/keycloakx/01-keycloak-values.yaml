image:
  registry: ghcr.io
  repository: gepaplexx-demos/gepardec-sso
  tag: 20.0.3-gepardec-1.0.0

customLivenessProbe:
  exec:
    command:
      - curl
      - '--head'
      - '--fail'
      - '--silent'
      - '--insecure'
      - 'https://127.0.0.1:8443/health/live'
  timeoutSeconds: 10
  periodSeconds: 20
  successThreshold: 1
  failureThreshold: 5
customReadinessProbe:
  exec:
    command:
      - curl
      - '--head'
      - '--fail'
      - '--silent'
      - '--insecure'
      - 'https://127.0.0.1:8443/health/ready'
  timeoutSeconds: 10
  periodSeconds: 20
  successThreshold: 1
  failureThreshold: 5
extraEnvVars:
  - name: KC_HOSTNAME
    value: hogarama-sso.apps.exoscale-ch-gva-2-0.appuio.cloud
  - name: KC_DB
    value: postgres
  - name: KC_DB_URL_HOST
    valueFrom:
      configMapKeyRef:
        name: hogarama-sso-keycloak-env-vars
        key: KEYCLOAK_DATABASE_HOST
  - name: KC_DB_USERNAME
    valueFrom:
      configMapKeyRef:
        name: hogarama-sso-keycloak-env-vars
        key: KEYCLOAK_DATABASE_USER
  - name: KC_DB_PASSWORD
    valueFrom:
      secretKeyRef:
        name: hogarama-sso-postgresql
        key: password
  - name: KEYCLOAK_ADMIN_PASSWORD
    valueFrom:
      secretKeyRef:
        name: hogarama-sso-keycloak
        key: admin-password
        optional: false
  - name: KC_HTTPS_CERTIFICATE_FILE
    value: /opt/bitnami/keycloak/certs/tls.crt
  - name: KC_HTTPS_CERTIFICATE_KEY_FILE
    value: /opt/bitnami/keycloak/certs/tls.key
  - name: KC_PROXY
    value: passthrough
podSecurityContext:
  enabled: false
containerSecurityContext:
  enabled: false  

service:
  type: ClusterIP
  http:
    enabled: false
  ports:
    https: 8443

ingress:
  enabled: true
  hostname: hogarama-sso.apps.exoscale-ch-gva-2-0.appuio.cloud
  tls: true
  servicePort: https
  annotations:
    nginx.ingress.kubernetes.io/backend-protocol: HTTPS
    route.openshift.io/termination: passthrough
    cert-manager.io/cluster-issuer: letsencrypt-production
  path: ""

tls:
  enabled: true
  existingSecret: hogarama-sso.apps.exoscale-ch-gva-2-0.appuio.cloud-tls

resources:
  limits:
    memory: 600Mi
  requests: 
    memory: 256Mi
    cpu: 50m

production: true

postgresql:
  primary:
    podSecurityContext:
      enabled: false
    containerSecurityContext:
      enabled: false
  backup:
    enabled: false
  auth:
    database: keycloak

keycloakConfigCli:
  enabled: true
  existingConfigmap: keycloak-config
  image:
    registry: docker.io
    repository: adorsys/keycloak-config-cli
    tag: 5.5.0-20.0.1
  podSecurityContext:
    enabled: false
  containerSecurityContext:
    enabled: false  
  resources:
    limits:
      memory: 600Mi
    requests: 
      memory: 256Mi
      cpu: 50m
  extraEnvVars:
    - name: KEYCLOAK_URL
      value: https://hogarama-sso-keycloak:8443
    - name: KEYCLOAK_SSLVERIFY
      value: "false"
    - name: IMPORT_FILES
      value: "/config/*"
    - name: KEYCLOAK_CONNECTTIMEOUT
      value: "10s"
    - name: KEYCLOAK_READTIMEOUT
      value: "10s"
    - name: KEYCLOAK_AVAILABILITYCHECK_ENABLED
      value: "true"
    - name: KEYCLOAK_AVAILABILITYCHECK_TIMEOUT
      value: "120s"
    - name: IMPORT_VARSUBSTITUTION_ENABLED
      value: "true"
    - name: IMPORT_VALIDATE
      value: "true"
    - name: IMPORT_CACHE_ENABLED
      value: "false"      
  command:
    - java
    - '-jar'
    - /app/keycloak-config-cli.jar
