<?xml version="1.0"?>
<project
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd"
	xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<artifactId>hogajama</artifactId>
		<groupId>com.gepardec.hogajama</groupId>
		<version>0.0.1-SNAPSHOT</version>
	</parent>

	<artifactId>hogajama-rs</artifactId>
	<packaging>war</packaging>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
	</properties>

  <dependencies>
    <dependency>
      <groupId>com.gepardec.hogajama</groupId>
      <artifactId>hogajama-interfaces-rs</artifactId>
    </dependency>
    <dependency>
      <groupId>com.gepardec.hogajama</groupId>
      <artifactId>hogajama-services</artifactId>
    </dependency>
    <dependency>
      <groupId>org.mapstruct</groupId>
      <artifactId>mapstruct</artifactId>
      <!-- use mapstruct-jdk8 for Java 8 or higher -->
    </dependency>
    <!-- Exposition servlet -->
    <dependency>
      <groupId>io.prometheus</groupId>
      <artifactId>simpleclient_servlet_jakarta</artifactId>
    </dependency>
    <dependency>
      <groupId>jakarta.annotation</groupId>
      <artifactId>jakarta.annotation-api</artifactId>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>jakarta.enterprise</groupId>
      <artifactId>jakarta.enterprise.cdi-api</artifactId>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>jakarta.inject</groupId>
      <artifactId>jakarta.inject-api</artifactId>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>jakarta.interceptor</groupId>
      <artifactId>jakarta.interceptor-api</artifactId>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>jakarta.servlet</groupId>
      <artifactId>jakarta.servlet-api</artifactId>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>jakarta.transaction</groupId>
      <artifactId>jakarta.transaction-api</artifactId>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>jakarta.ws.rs</groupId>
      <artifactId>jakarta.ws.rs-api</artifactId>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.jboss.resteasy</groupId>
      <artifactId>resteasy-client</artifactId>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.jboss.resteasy</groupId>
      <artifactId>resteasy-jackson2-provider</artifactId>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.jboss.resteasy</groupId>
      <artifactId>resteasy-multipart-provider</artifactId>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.junit.jupiter</groupId>
      <artifactId>junit-jupiter</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.mockito</groupId>
      <artifactId>mockito-junit-jupiter</artifactId>
      <scope>test</scope>
    </dependency>
	<dependency>
		<groupId>org.jboss.resteasy</groupId>
		<artifactId>resteasy-jaxb-provider</artifactId>
		<scope>provided</scope>
	</dependency>
	<dependency>
		<groupId>io.smallrye.reactive</groupId>
		<artifactId>smallrye-reactive-messaging-api</artifactId>
		<scope>provided</scope>
	</dependency>
	<dependency>
		<groupId>commons-io</groupId>
		<artifactId>commons-io</artifactId>
	</dependency>
       <dependency>
           <groupId>io.prometheus</groupId>
           <artifactId>simpleclient_hotspot</artifactId>
           <scope>compile</scope>
       </dependency>
	<!-- Test Start -->
	<dependency>
		<groupId>org.assertj</groupId>
		<artifactId>assertj-core</artifactId>
	</dependency>
	<!-- Test End -->
	</dependencies>

	<build>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<configuration>
					<annotationProcessorPaths>
						<path>
							<groupId>org.mapstruct</groupId>
							<artifactId>mapstruct-processor</artifactId>
							<version>${org.mapstruct.version}</version>
						</path>
					</annotationProcessorPaths>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>build-helper-maven-plugin</artifactId>
				<executions>
					<execution>
						<configuration>
							<sources>
								<source>${project.build.directory}/generated-sources/annotations</source>
							</sources>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-war-plugin</artifactId>
			</plugin>
		</plugins>
	</build>
	<profiles>
		<profile>
			<!-- When built in OpenShift the 'openshift' profile will be used when 
				invoking mvn. -->
			<!-- Use this profile for any OpenShift specific customization your app 
				will need. -->
			<!-- By default that is to put the resulting archive into the 'deployments' 
				folder. -->
			<!-- http://maven.apache.org/guides/mini/guide-building-for-different-environments.html -->
			<id>openshift</id>
			<build>
				<plugins>
					<plugin>
						<artifactId>maven-war-plugin</artifactId>
						<configuration>
							<outputDirectory>deployments</outputDirectory>
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>ocp</id>
			<build>
				<plugins>
					<plugin>
						<artifactId>maven-war-plugin</artifactId>
						<configuration>
							<outputDirectory>${project.parent.basedir}/target</outputDirectory>
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>security-dummy</id>
			<activation>
				<property>
					<name>env.HOGAJAMA_MODULE_SECURITY</name>
					<value>DUMMY</value>
				</property>
			</activation>
			<dependencies>
				<dependency>
					<artifactId>hogajama-security-dummy</artifactId>
					<groupId>com.gepardec.hogajama</groupId>
					<version>0.0.1-SNAPSHOT</version>
				</dependency>
			</dependencies>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-war-plugin</artifactId>
						<configuration>
							<webXml>${basedir}/src/main/webapp/WEB-INF/dummy-web.xml</webXml>
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>security-jwt</id>
			<activation>
				<activeByDefault>true</activeByDefault>
				<property>
					<name>env.HOGAJAMA_MODULE_SECURITY</name>
					<value>JWT</value>
				</property>
			</activation>
			<dependencies>
				<dependency>
					<artifactId>hogajama-security-jwt</artifactId>
					<groupId>com.gepardec.hogajama</groupId>
					<version>0.0.1-SNAPSHOT</version>
				</dependency>
			</dependencies>
		</profile>
		<profile>
			<id>messaging-mdb</id>
			<activation>
				<property>
					<name>env.HOGAJAMA_MESSAGING</name>
					<value>MDB</value>
				</property>
			</activation>
			<dependencies>
				<dependency>
					<artifactId>hogajama-messaging-mdb</artifactId>
					<groupId>com.gepardec.hogajama</groupId>
					<version>0.0.1-SNAPSHOT</version>
				</dependency>
			</dependencies>
		</profile>
		<profile>
			<id>messaging-kafka</id>
			<activation>
				<activeByDefault>true</activeByDefault>
				<property>
					<name>env.HOGAJAMA_MESSAGING</name>
					<value>KAFKA</value>
				</property>
			</activation>
			<dependencies>
				<dependency>
					<artifactId>hogajama-messaging-kafka</artifactId>
					<groupId>com.gepardec.hogajama</groupId>
					<version>0.0.1-SNAPSHOT</version>
				</dependency>
			</dependencies>
		</profile>
		<profile>
			<id>messaging-rest</id>
			<activation>
				<property>
					<name>env.HOGAJAMA_MESSAGING</name>
					<value>REST</value>
				</property>
			</activation>
			<dependencies>
				<dependency>
					<artifactId>hogajama-messaging-rest</artifactId>
					<groupId>com.gepardec.hogajama</groupId>
					<version>0.0.1-SNAPSHOT</version>
				</dependency>
			</dependencies>
		</profile>
	</profiles>
</project>
