mp.messaging.connector.smallrye-kafka.bootstrap.servers=${kafka.bootstrap.servers}

mp.messaging.incoming.habarama-in.connector=smallrye-kafka
mp.messaging.incoming.habarama-in.topic=${kafka.topic.prefix}habarama
mp.messaging.incoming.habarama-in.merge=true
mp.messaging.incoming.habarama-in.broadcast=true
mp.messaging.incoming.habarama-in.value.serializer=org.apache.kafka.common.serialization.StringSerializer
mp.messaging.incoming.habarama-in.value.deserializer=org.apache.kafka.common.serialization.StringDeserializer
mp.messaging.incoming.habarama-in.security.protocol=SSL
mp.messaging.incoming.habarama-in.ssl.truststore.password=password
mp.messaging.incoming.habarama-in.ssl.truststore.location=${jboss.server.config.dir}/kafka-truststore.jks

mp.messaging.incoming.habarama-raw-in.connector=smallrye-kafka
mp.messaging.incoming.habarama-raw-in.topic=${kafka.topic.prefix}habarama
mp.messaging.incoming.habarama-raw-in.merge=true
mp.messaging.incoming.habarama-raw-in.broadcast=true
mp.messaging.incoming.habarama-raw-in.value.serializer=org.apache.kafka.common.serialization.StringSerializer
mp.messaging.incoming.habarama-raw-in.value.deserializer=org.apache.kafka.common.serialization.StringDeserializer
mp.messaging.incoming.habarama-raw-in.security.protocol=SSL
mp.messaging.incoming.habarama-raw-in.ssl.truststore.password=password
mp.messaging.incoming.habarama-raw-in.ssl.truststore.location=${jboss.server.config.dir}/kafka-truststore.jks

mp.messaging.outgoing.habarama-smooth-out.connector=smallrye-kafka
mp.messaging.outgoing.habarama-smooth-out.topic=${kafka.topic.prefix}habarama-smooth
mp.messaging.outgoing.habarama-smooth-out.merge=true
mp.messaging.outgoing.habarama-smooth-out.broadcast=true
mp.messaging.outgoing.habarama-smooth-out.value.serializer=org.apache.kafka.common.serialization.StringSerializer
mp.messaging.outgoing.habarama-smooth-out.value.deserializer=org.apache.kafka.common.serialization.StringDeserializer
mp.messaging.outgoing.habarama-smooth-out.security.protocol=SSL
mp.messaging.outgoing.habarama-smooth-out.ssl.truststore.password=password
mp.messaging.outgoing.habarama-smooth-out.ssl.truststore.location=${jboss.server.config.dir}/kafka-truststore.jks

mp.messaging.incoming.habarama-smooth-in.connector=smallrye-kafka
mp.messaging.incoming.habarama-smooth-in.topic=${kafka.topic.prefix}habarama-smooth
mp.messaging.incoming.habarama-smooth-in.merge=true
mp.messaging.incoming.habarama-smooth-in.broadcast=true
mp.messaging.incoming.habarama-smooth-in.value.serializer=org.apache.kafka.common.serialization.StringSerializer
mp.messaging.incoming.habarama-smooth-in.value.deserializer=org.apache.kafka.common.serialization.StringDeserializer
mp.messaging.incoming.habarama-smooth-in.security.protocol=SSL
mp.messaging.incoming.habarama-smooth-in.ssl.truststore.password=password
mp.messaging.incoming.habarama-smooth-in.ssl.truststore.location=${jboss.server.config.dir}/kafka-truststore.jks
