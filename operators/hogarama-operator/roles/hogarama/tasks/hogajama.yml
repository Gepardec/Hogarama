- name: "Set Hogajama bc/{{ _hogajama_name }}"
  k8s:
    state: present
    definition:
      apiVersion: v1
      kind: BuildConfig
      metadata:
        labels:
          app: "{{ _label_app }}"
        name: "{{ _hogajama_name }}"
        namespace: "{{ _namespace }}"
      spec:
        source:
          contextDir: "{{ _hogajama_s2i_context_dir }}"
          type: Git
          git:
            ref: "{{ _hogajama_git_ref }}"
            uri: "{{ _hogajama_git_repo }}"
        strategy:
          type: "Source"
          sourceStrategy:
            env:
              - name: "MAVEN_MIRROR_URL"
                value: "{{ _hogajama_s2i_m2_url }}"
              - name: "MAVEN_ARGS"
                value: "{{ _hogajama_s2i_m2_args }}"
            from:
              kind: ImageStreamTag
              name: "{{ _hogajama_s2i_imagestream }}"
              namespace: "{{ _hogajama_s2i_namespace }}"
        output:
          to:
            kind: ImageStreamTag
            name: "{{ _hogajama_name }}:latest"
        triggers:
          - type: GitHub
            github:
              secret: "{{ _hogajama_s2i_trigger_secret_github }}"
          - type: Generic
            generic:
              secret: "{{ _hogajama_s2i_trigger_secret_generic }}"
          - type: ConfigChange

- name: "Setting up dc/{{ _hogajama_name }}"
  k8s:
    state: present
    definition:
      apiVersion: v1
      kind: DeploymentConfig
      metadata:
        name: "{{ _hogajama_name }}"
        namespace: "{{ _namespace }}"
        labels:
          app: "{{ _label_app }}"
      spec:
        replicas: "{{ _hogajama_replicas }}"
        selector:
          name: "{{ _hogajama_name }}"
        strategy:
          type: Rolling
          rollingParams:
            intervalSeconds: 1
            maxSurge: 25%
            maxUnavailable: 25%
            timeoutSeconds: 600
            updatePeriodSeconds: 1
        template:
          metadata:
            labels:
              app: "{{ _label_app }}"
              name: "{{ _hogajama_name }}"
          spec:
            containers:
              - name: "{{ _hogajama_name }}"
                image: " "
                imagePullPolicy: Always
                ports:
                  - containerPort: "{{ _hogajama_port_web_unsecure }}"
                    protocol: TCP
                  - containerPort: "{{ _hogajama_port_web_secure }}"
                    protocol: TCP
                  - containerPort: "{{ _hogajama_port_other }}"
                    protocol: TCP
                resources: {}
                terminationMessagePath: /dev/termination-log
            dnsPolicy: ClusterFirst
            restartPolicy: Always
            terminationGracePeriodSeconds: 60
        triggers:
          - type: ImageChange
            imageChangeParams:
              automatic: true
              containerNames:
                - "{{ _hogajama_name }}"
              from:
                kind: ImageStreamTag
                name: "{{ _hogajama_name }}:latest"
          - type: ConfigChange

- name: "Setting up svc/{{ _hogajama_name }}"
  k8s:
    definition:
      apiVersion: v1
      kind: Service
      metadata:
        labels:
          app: "{{ _label_app }}"
        name: "{{ _hogajama_name }}"
        namespace: "{{ _namespace }}"
      spec:
        ports:
          - name: "{{ _hogajama_port_web_unsecure }}-tcp"
            port: "{{ _hogajama_port_web_unsecure }}"
            targetPort: "{{ _hogajama_port_web_unsecure }}"
            protocol: TCP
          - name: "{{ _hogajama_port_web_secure }}-tcp"
            port: "{{ _hogajama_port_web_secure }}"
            targetPort: "{{ _hogajama_port_web_secure }}"
            protocol: TCP
          - name: "{{ _hogajama_port_other }}-tcp"
            port: "{{ _hogajama_port_other }}"
            targetPort: "{{ _hogajama_port_other }}"
            protocol: TCP
        selector:
          deploymentconfig: "{{ _hogajama_name }}"
        sessionAffinity: None
        type: ClusterIP

- name: "Setting up route/{{ _hogajama_name }}-ssl"
  k8s:
    state: present
    definition:
      apiVersion: v1
      kind: Route
      metadata:
        labels:
          app: "{{ _label_app }}"
        name: "{{ _hogajama_name }}"
        namespace: "{{ _namespace }}"
      spec:
        port:
          targetPort: "{{ _hogajama_port_web_unsecure }}-tcp"
        tls:
          termination: edge
        to:
          kind: Service
          name: "{{ _hogajama_name }}"
          weight: 100
        wildcardPolicy: None

- name: "Setting up route/{{ _hogajama_name }}-passthrough"
  k8s:
    state: present
    definition:
      apiVersion: v1
      kind: Route
      metadata:
        labels:
          app: "{{ _label_app }}"
        name: "{{ _hogajama_name }}-passthrough"
        namespace: "{{ _namespace }}"
      spec:
        port:
          targetPort: "{{ _hogajama_port_web_secure }}-tcp"
        tls:
          termination: passthrough
        to:
          kind: Service
          name: "{{ _hogajama_name }}"
          weight: 100
        wildcardPolicy: None
